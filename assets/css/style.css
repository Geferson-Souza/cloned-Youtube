/*
  RESET BÁSICO: Começando do zero para ter controle total dos estilos.
  Isso me ajuda a evitar surpresas de estilos padrão do navegador.
*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; /* Essencial! Garante que padding e borda não aumentem o tamanho do elemento. */
}

html {
  line-height: 1.15;
  -webkit-text-size-adjust: 100%;
  font-size: 16px; /* Defini o tamanho base para facilitar o uso de 'rem'. */
}

img {
  max-width: 100%;
  display: block;
  height: auto;
}

button,
input {
  font: inherit; /* Botões e inputs herdam a fonte do corpo para consistência. */
}

ul {
  list-style: none;
}

a {
  text-decoration: none;
  color: inherit; /* Links herdam a cor do texto pai, mais fácil de estilizar depois. */
}

/*
  Variáveis CSS: Guardando cores e tamanhos comuns para reutilizar.
  Isso deixa o código mais organizado e fácil de manter.
*/
:root {
  --yt-red: #cc0000;
  --yt-red-hover: #b30000;
  --yt-text-primary: #030303;
  --yt-text-secondary: #606060;
  --yt-text-tertiary: #515151;
  --radius-sm: 2px;
  --radius-md: 8px;
  --radius-pill: 999px; /* Para botões arredondados. */
  --content-max-width: 1600px;
  --sidebar-width: 380px; /* Aumentei a largura da sidebar para o conteúdo não ser cortado. */
}

/* Estilos base para o corpo da página */
body {
  font-family: 'Roboto', sans-serif;
  background: #f9f9f9;
  color: var(--yt-text-primary);
  overflow-x: hidden; /* Evita rolagem horizontal indesejada. */
  min-height: 100vh;
  display: flex;
  flex-direction: column; /* Usei flexbox para que o rodapé (se houver) fique no final. */
}

/* Utilitários: Classes para funcionalidades específicas. */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  white-space: nowrap;
  border: 0;
}

/*
  HEADER: Cabeçalho da página, sempre visível no topo.
  Usei flexbox para alinhar os elementos.
*/
.site-header {
  position: sticky;
  top: 0;
  z-index: 1000;
  background: #fff;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: 56px;
  padding: 0 1rem;
  gap: 0.75rem;
}

.site-header__left,
.site-header__center,
.site-header__right {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.brand img {
  display: block;
  height: auto;
}

.icon-button {
  background: none;
  border: none;
  cursor: pointer;
  padding: 0.5rem;
  color: var(--yt-text-secondary);
  line-height: 0;
}

.icon-button svg {
  width: 24px;
  height: 24px;
}

.user-avatar img {
  width: 32px;
  height: 32px;
  border-radius: 50%;
}

/* Menu hambúrguer / drawer */
.hamburger-wrap {
  position: relative;
  width: 40px;
  flex-shrink: 0;
}

.hamburger {
  display: block;
  cursor: pointer;
  position: relative;
  width: 24px;
  height: 24px;
  padding: 0.5rem;
}

.hamburger span {
  position: absolute;
  left: 0;
  right: 0;
  height: 2px;
  background: #333;
  border-radius: 9px;
  transition: 0.25s;
}

.hamburger span:nth-child(1) {
  top: 0;
}

.hamburger span:nth-child(2) {
  top: 8px;
}

.hamburger span:nth-child(3) {
  top: 16px;
}

#leftmenu-toggle:checked + .hamburger span:nth-child(1) {
  top: 8px;
  transform: rotate(135deg);
}

#leftmenu-toggle:checked + .hamburger span:nth-child(2) {
  opacity: 0;
}

#leftmenu-toggle:checked + .hamburger span:nth-child(3) {
  top: 8px;
  transform: rotate(-135deg);
}

.left-drawer {
  position: fixed;
  top: 56px;
  left: -240px;
  width: 240px;
  height: calc(100vh - 56px);
  background: #fff;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
  padding-top: 0.75rem;
  overflow-y: auto;
  transition: left 0.25s ease-in-out;
  z-index: 999;
}

#leftmenu-toggle:checked ~ .left-drawer {
  left: 0;
}

.left-drawer__nav {
  padding: 0;
  margin: 0;
}

.left-drawer__nav li {
  margin-bottom: 0.25rem;
}

.left-drawer__nav hr {
  border: none;
  border-top: 1px solid #e0e0e0;
  margin: 0.75rem 0;
}

.left-drawer__nav a {
  display: flex;
  align-items: center;
  padding: 0.5rem 1rem;
  border-radius: 0 20px 20px 0;
  color: var(--yt-text-primary);
  transition: background 0.15s;
  font-size: 1rem;
}

.left-drawer__nav a:hover {
  background: #f2f2f2;
}

.left-drawer__nav a.is-active {
  background: #e6e6e6;
  font-weight: bold;
}

/*
  SEARCH FORM: Formulário de busca.
  Escondido por padrão, mostrado em telas maiores.
*/
.search-form {
  display: none;
  align-items: center;
  border: 1px solid #ccc;
  border-radius: 25px;
  overflow: hidden;
  max-width: 600px;
  width: clamp(160px, 40vw, 600px);
}

.search-form input {
  border: none;
  outline: none;
  padding: 0.5rem 1rem;
  flex-grow: 1; /* O input cresce para preencher o espaço. */
  font-size: 1rem;
  background: transparent;
}

.search-form button {
  background: #f8f8f8;
  border: none;
  padding: 0.5rem 1rem;
  cursor: pointer;
  border-left: 1px solid #ccc;
  color: var(--yt-text-secondary);
  line-height: 0;
}

.search-form svg {
  width: 24px;
  height: 24px;
}

/*
  PAGE WRAPPER: Contêiner principal do conteúdo.
  Usei Grid para o layout principal (vídeo e sidebar).
*/
.page-wrapper {
  width: 100%;
  margin-inline: auto;
  max-width: var(--content-max-width);
  display: grid;
  grid-template-areas:
    "main"
    "aside"; /* Em telas pequenas, a sidebar fica abaixo do vídeo. */
  grid-template-columns: 1fr;
  gap: 1.5rem;
}

/*
  WATCHING VIDEO: Seção principal onde o vídeo é exibido.
  Adicionei padding aqui para garantir espaçamento em telas menores.
*/
.watching-area {
  grid-area: main;
  padding-inline: 1rem; /* Isso adiciona 16px de padding nas laterais do vídeo e seu conteúdo. */
}

.watching-video {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.video-player {
  width: 100%;
  aspect-ratio: 16 / 9; /* Essencial! Garante que o vídeo sempre mantenha a proporção 16:9. */
  background: #000;
  border-radius: var(--radius-md);
  overflow: hidden;
}

.video-player iframe {
  width: 100%;
  height: 100%;
  border: 0;
}

.video-title {
  font-size: 1.25rem;
  font-weight: 600;
  line-height: 1.1;
  color: var(--yt-text-primary);
}

.video-meta {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  align-items: flex-start;
}

.video-channel-block {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.channel-avatar {
  width: 42px;
  height: 42px;
  border-radius: 50%;
}

.video-channel-texts {
  display: flex;
  flex-direction: column;
  line-height: 1.1;
}

.channel-name {
  font-weight: 600;
  font-size: 1rem;
}

.channel-subs {
  font-size: 0.75rem;
  color: var(--yt-text-secondary);
}

.pill-button {
  background: #f2f2f2;
  border: none;
  padding: 0.5rem 1rem;
  border-radius: var(--radius-pill);
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--yt-text-secondary);
  transition: background 0.15s;
}

.pill-button:hover {
  background: #e6e6e6;
}

.pill-button img {
  width: 65px;
  height: auto;
}

.pill-button--subscribe {
  background: var(--yt-red);
  color: #fff;
  font-weight: 700;
}

.pill-button--subscribe:hover {
  background: var(--yt-red-hover);
}

.pill-button--dots {
  font-weight: 700;
  padding-inline: 0.75rem;
}

.video-actions {
  display: flex;
  flex-wrap: wrap; /* Permite que os botões quebrem a linha. */
  gap: 0.5rem;
}

.video-stats {
  font-size: 0.875rem;
  font-weight: 600;
  color: var(--yt-text-primary);
}

.video-description {
  width: min(70%, 60ch); /* Limita a largura para melhor legibilidade. */
  font-size: 0.875rem;
  color: var(--yt-text-tertiary);
  line-height: 1.6;
}

.video-description p + p {
  margin-top: 0.75rem;
}

.video-tags {
  font-weight: 600;
  color: var(--yt-text-primary);
}

.video-upload-date-main {
  margin-top: 0.5rem;
  font-size: 0.75rem;
  color: var(--yt-text-secondary);
}

/*
  RIGHT SIDEBAR: Barra lateral com vídeos sugeridos.
  Em mobile, ela fica abaixo do vídeo principal.
  Adicionei padding aqui para consistência.
*/
.right-sidebar {
  grid-area: aside;
  padding-inline: 1rem; /* Isso adiciona 16px de padding nas laterais da sidebar. */
}

.sidebar-heading {
  font-size: 1rem;
  font-weight: 600;
  margin: 1rem 0 0.5rem;
}

.video-list {
  display: grid;
  gap: 1rem;
}

.video-card {
  display: grid;
  grid-template-columns: auto 1fr; /* Imagem e info lado a lado. */
  gap: 0.75rem;
  align-items: start;
}

.video-card__thumb {
  position: relative;
  width: 160px;
  aspect-ratio: 16 / 9;
  border-radius: var(--radius-md);
  overflow: hidden;
  flex-shrink: 0;
  background: #000;
  display: block;
}

.video-card__thumb img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.video-card__thumb .duration,
.video-card__thumb .badge-upcoming {
  position: absolute;
  bottom: 0.25rem;
  right: 0.25rem;
  background: rgba(0, 0, 0, 0.8);
  color: #fff;
  font-size: 0.75rem;
  padding: 1px 4px;
  border-radius: var(--radius-sm);
}

.video-card.is-upcoming .badge-upcoming {
  background: var(--yt-red);
}

.video-card__info {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  width: 196px; /* Mantive a largura fixa para o info, mas o problema era na largura da sidebar. */
  max-width: 100%;
}

.video-card__info .title {
  font-size: 0.875rem;
  line-height: 1.1;
  font-weight: 600;
}

.video-card__info .channel {
  font-size: 0.75rem;
  color: var(--yt-text-secondary);
}

.video-card__info .meta {
  font-size: 0.75rem;
  color: var(--yt-text-secondary);
}

/*
  RESPONSIVIDADE: Ajustando o layout para diferentes tamanhos de tela.
  Uso 'min-width' para aplicar estilos a partir de um certo tamanho.
*/

/* Para telas maiores que 480px: mostrar a busca curta */
@media (min-width: 480px) {
  .search-form {
    display: flex;
  }
}

/* Para telas maiores que 768px: layout em colunas (vídeo ao lado da sidebar) */
@media (min-width: 768px) {
  .page-wrapper {
    grid-template-areas: "main aside";
    grid-template-columns: 1fr var(--sidebar-width); /* A sidebar tem uma largura fixa. */
    align-items: start;
  }

  /* Em telas maiores, o padding lateral volta a ser controlado pelo page-wrapper,
     já que as áreas 'main' e 'aside' estão lado a lado. */
  .watching-area {
    padding: 1rem; /* Removi o padding extra que apliquei para mobile. */
  }

  .right-sidebar {
    padding-inline: 0; /* Removi o padding extra que apliquei para mobile. */
  }

  .video-meta {
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
  }

  .video-description {
    width: 100%;
  }
}

/* Para telas maiores que 1200px: O vídeo já é responsivo devido ao 'aspect-ratio'. */
@media (min-width: 1200px) {
  .video-player {
    /* Não preciso de altura fixa aqui, o 'aspect-ratio' já resolve a responsividade. */
  }
}
